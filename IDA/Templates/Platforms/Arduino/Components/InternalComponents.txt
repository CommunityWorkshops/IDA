//Template Version=1.02
//Author=Dave Gordon
//Email=dave@community-workshops.com
//Website=Community-Workshops.com
//For=Arduino
//Created=5th of August 2016
//Template License=Creative Commons Attribution
//Source Code License=Public Domain

Versions=Uno
Name=Pin 13
Description=Controls the onboard debug LED attached to Pin 13.
Options=
Setup=pinMode(13,OUTPUT);
Loop=digitalWrite(13, HIGH);    // turn the LED on (HIGH is the voltage level)
Loop=delay(1000);               // wait for 1 second (1000ms)
Loop=digitalWrite(13, LOW);     // turn the LED off by making the voltage LOW
Loop=delay(1000);               // wait for 1 second

Versions=Uno
Name=Serial Input
Description=Allows the board to RECIEVE serial input.
Options=Analog,Digital
Images=SerialInput
Setup=Serial.begin(9600);                       // initialize serial communication at 9600 bits per second:
Digital Setup= pinMode(pushButton, INPUT);      // make the pushbutton's pin an input:
Analog Loop=int sensorValue = analogRead(A0);   // read the input on analog pin 0:
Analog Loop=Serial.println(sensorValue);        // print out the value you read:
Analog Loop=delay(1);                           // delay in between reads for stability
Digital Loop=int buttonState = digitalRead(pushButton);  // read the input pin:
Digital Loop=Serial.println(buttonState);       // print out the state of the button:
Digital Loop=delay(1);                          // delay in between reads for stability

Versions=Uno
Name=Serial Output
Description=Allows the board to SEND data via the Serial Port (USB Port)
Options=Analog,Digital
Images=SerialOutput
Analog Global=                                                  // These constants won't change.  They're used to give names to the pins used:
Analog Global=const int analogInPin = A0;                       // Analog input pin that the potentiometer is attached to
Analog Global=const int analogOutPin = 9;                       // Analog output pin that the LED is attached to
Analog Global=
Analog Global=int sensorValue = 0;                              // value read from the pot
Analog Global=int outputValue = 0;                              // value output to the PWM (analog out)
Setup=Serial.begin(9600);                                       // initialize serial communication at 9600 bits per second:
Analog Loop=sensorValue = analogRead(analogInPin);              // read the analog in value:
Analog Loop=outputValue = map(sensorValue, 0, 1023, 0, 255);    // map it to the range of the analog out:
Analog Loop=analogWrite(analogOutPin, outputValue);             // change the analog out value:
Analog Loop=
Analog Loop=Serial.print("sensor = ");                          // print the results to the serial monitor:
Analog Loop=Serial.print(sensorValue);                          // print the results to the serial monitor:
Analog Loop=Serial.print("\t output = ");                       // print the results to the serial monitor: \t = insert a tab spacing
Analog Loop=Serial.println(outputValue);                        // print the results to the serial monitor:
Analog Loop=
Analog Loop=delay(2);                                           // wait 2 milliseconds before the next loop for the analog-to-digital converter to settle after the last reading:

